"""Hash API keys before storing them in the database

Revision ID: 237e8c21b8ba
Revises: 30382babf339
Create Date: 2022-06-12 21:15:12.776729

"""
import hashlib

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

from aurweb import db

# revision identifiers, used by Alembic.
revision = "237e8c21b8ba"
down_revision = "30382babf339"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("ApiKeys", sa.Column("KeyHash", sa.Text(), nullable=False))

    with db.connect() as con:
        api_keys = con.execute("SELECT ID, `Key` FROM ApiKeys").all()

        for key_id, key_value in api_keys:
            key_hash = hashlib.sha256(key_value.encode()).hexdigest()
            con.execute(
                f'UPDATE ApiKeys set KeyHash = "{key_hash}" WHERE ID = {key_id}'
            )

    op.drop_index("Key", table_name="ApiKeys")
    op.create_unique_constraint(None, "ApiKeys", ["KeyHash"])
    op.drop_column("ApiKeys", "Key")
    op.alter_column(
        "PackageKeywords",
        "PackageBaseID",
        existing_type=mysql.INTEGER(display_width=10, unsigned=True),
        nullable=True,
    )
    op.alter_column(
        "PackageLicenses",
        "PackageID",
        existing_type=mysql.INTEGER(display_width=10, unsigned=True),
        nullable=True,
    )
    op.alter_column(
        "PackageLicenses",
        "LicenseID",
        existing_type=mysql.INTEGER(display_width=10, unsigned=True),
        nullable=True,
    )
    # ### end Alembic commands ###
