# The documentation of this configuration file is a work-in-progress.
# TODO: Make it not work-in-progress :P.
#
# Database configuration.
# host (mandatory): The hostname/IP of the MySQL instance.
# port (optional): The port of the MySQL instance (defaults to 3306).
# name (mandatory): The database for mprweb to store data in.
# user (mandatory): The user to connect to the MySQL instance with.
# password (optional): The password to connect to the MySQL instance with. Connects with no password if unset.
[database]
host = mariadb
;port = 3306
name = mprweb
user = mprweb
password = a_very_strong_database_password
backend = mysql

# General configuration.
# username_min_len (mandatory): The minimum length of user's usernames.
# username_max_len (mandatory): The maximum length of user's usernames.
# passwd_min_len (mandatory): The minimum length of user's passwords.
# default_lang (mandatory): The default language for new users.
# default_timezone (mandatory): The default timezone for new users.
# login_timeout (mandatory): The amount of time new logins in the web interface is valid for.
# persistent_cookie_timeout (mandatory): Haven't found out yet (TODO!).
# disable_http_login (mandatory): Boolean to disable logins via HTTP, and to require HTTPS. You should probably leave this off and put a TLS-capable reverse proxy in front of your instance.
# aur_location (mandatory): The URL to your instance.
# git_clone_uri_anon (mandatory): The URL used for HTTP Git clones.
# git_clone_uri_priv (mandatory): The URL used for SSH Git clones.
# max_rpc_results (mandatory): To be deprecated. Don't modify (TODO!).
# max_search_results (mandatory): The maximum amount of results to return on routes such as '/packages'.
# aur_request_ml (mandatory): To be deprecated. Don't modify (TODO!).
# request_idle_time (mandatory): The amount of time that must pass before a TU is allowed to orphan a package via an orphan request.
# auto_orphan_age (mandatory): The amount of time that must pass before a package marked as out of date can be automatically orphaned via an orphan request.
# auto_delete_age (mandatory): The amount of time that must pass before a package marked as out of date can be automatically deleted via a deletion request.
# enable-maintenance (mandatory): Whether the instance is put into maintenance mode. This disables actions that can cause changes on an instance (only the SSH Git interface behaves this way currently). Certain IPs can be whitelisted from maintenance from via the 'maintenance-exceptions' key.
# maintenance-exceptions (optional): A space-separated list of IPs to allow normal functionality on the instance when 'enable-maintenance' is on.
# redis_address (mandatory): The address to the redis instance to use on the instance.
# salt_rounds (mandatory): The number of rounds a password is salted before being stored in the databases. (TODO: I don't know too much about cryptography, and I need to figure out how this works in practice).
# traceback (mandatory): Whether to show Python tracebacks when processing a request via the web interface. This is useful for local testing, but you **SHOULD** turn this off in a production instance, as it can leak sensitive user information.
# bot-user (mandatory): The username of a user to perform automated actions by the system. Currently this is used when reporting out of date notifications for Repology checks, though this may be expanded upon in the future.
[options]
username_min_len = 3
username_max_len = 16
passwd_min_len = 8
default_lang = en
default_timezone = UTC
login_timeout = 7200
persistent_cookie_timeout = 2592000
disable_http_login = 0
aur_location = http://localhost:8080
git_clone_uri_anon = http://localhost:8080/%s.git
git_clone_uri_priv = ssh://mpr@localhost:2222/%s.git
max_rpc_results = 5000
max_search_results = 2500
aur_request_ml = aur-requests@lists.archlinux.org
request_idle_time = 1209600
auto_orphan_age = 15552000
auto_delete_age = 86400
enable-maintenance = 0
#maintenance-exceptions = 127.0.0.1
redis_address = redis://redis
salt_rounds = 12
traceback = 1
bot-user = kavplex

# Ratelimit configuration.
# request_limit (mandatory): The amount of requests allowed every period of 'window_length' in the RPC interface.
# window_length (mandatory): The period of time that 'request_limit' lasts before getting reset.
# cache (mandatory): I have no clue, nor do I care enough to figure it out. It's something for the RPC interface, which I plan on removing in the future anyway. We'll document this if it starts to pose any issues before getting removed.
[ratelimit]
request_limit = 4000
window_length = 86400
; Force-utilize cache for ratelimiting. In FastAPI, forced cache (1)
; will cause the ratelimit path to use a real or fake Redis instance
; depending on the configured options.cache setting. Otherwise,
; cache will be ignored and the database will be used.
cache = 1

# Notifications configuration.
#
[notifications]
sendmail =
smtp-server = localhost
smtp-port = 25
smtp-use-ssl = 0
smtp-use-starttls = 0
smtp-user =
smtp-password =
sender = notify@aur.archlinux.org
reply-to = noreply@aur.archlinux.org
; Administration email which will receive notifications about
; various server details like uncaught exceptions.
postmaster = admin@example.org

[fingerprints]
Ed25519 = SHA256:HQ03dn6EasJHNDlt51KpQpFkT3yBX83x7BoIkA1iv2k
ECDSA = SHA256:L71Q91yHwmHPYYkJMDgj0xmUuw16qFOhJbBr1mzsiOI
RSA = SHA256:Ju+yWiMb/2O+gKQ9RJCDqvRg7l+Q95KFAeqM5sr6l2s

[auth]
; For U2F key prefixes, see the following documentation from openssh:
; https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.u2f
valid-keytypes = ssh-rsa ssh-dss ecdsa-sha2-nistp256 ecdsa-sha2-nistp384 ecdsa-sha2-nistp521 ssh-ed25519 sk-ecdsa-sha2-nistp256@openssh.com sk-ecdsa-sha2-nistp256-cert-v01@openssh.com sk-ssh-ed25519@openssh.com sk-ssh-ed25519-cert-v01@openssh.com
username-regex = [a-zA-Z0-9]+[.\-_]?[a-zA-Z0-9]+$
git-serve-cmd = /usr/bin/aurweb-git-serve
ssh-options = restrict

[sso]
openid_configuration =
client_id =
client_secret =

[fastapi]
bind_address = 127.0.0.1:8082
session_secret = secret

[serve]
repo-path = /aurweb/aur.git
repo-regex = [a-z0-9][a-z0-9.+_-]*$
git-shell-cmd = /usr/bin/git-shell
git-update-cmd = /usr/bin/aurweb-git-update
ssh-cmdline = ssh mpr@mpr.makedeb.org

[update]
max-blob-size = 256000

[mkpkglists]
archivedir = /var/lib/aurweb/archives
packagesfile = /var/lib/aurweb/archives/packages.gz
packagesmetafile = /var/lib/aurweb/archives/packages-meta-v1.json.gz
packagesmetaextfile = /var/lib/aurweb/archives/packages-meta-ext-v1.json.gz
pkgbasefile = /var/lib/aurweb/archives/pkgbase.gz
userfile = /var/lib/aurweb/archives/users.gz

[devel]
commit_url = https://github.com/makedeb/mprweb/commit/%s
# TODO: Get the latest hash automatically when the FastAPI container starts up.
commit_hash = HEAD

[tuvotereminder]
; Offsets used to determine when TUs should be reminded about
; votes that they should make.
; Reminders will be sent out for all votes that a TU has not yet
; voted on based on `now + range_start <= End <= now + range_end`.
range_start = 500
range_end = 172800
